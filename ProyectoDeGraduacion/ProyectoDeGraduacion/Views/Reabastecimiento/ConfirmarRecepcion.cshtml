@model List<ProyectoDeGraduacion.Entidades.ProductoPendiente>

@{
    ViewBag.Title = "Confirmar Recepción de Productos";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="container mt-4">
    <h2 class="text-center">Confirmar Recepción de Productos</h2>
    <p class="text-center">Confirme la recepción de los productos y actualice el inventario.</p>

    <div class="table-responsive mt-4">
        <table class="table table-bordered">
            <thead class="thead-dark">
                <tr>
                    <th>Producto</th>
                    <th>Cantidad Solicitada</th>
                    <th>Proveedor</th>
                    <th>Acciones</th>
                </tr>
            </thead>
            <tbody id="productTableBody">
                @foreach (var orden in Model)
                {
                    <tr id="row-@orden.IdProducto">
                        <td>@orden.NombreProducto</td>
                        <td>@orden.CantidadSolicitada</td>
                        <td>@orden.Proveedor</td>
                        <td>
                            <div class="d-flex gap-2">
                                <button type="button" class="btn btn-info btn-sm confirmar-recepcion-btn" data-id="@orden.idOrdenCompra">Confirmar Recepción</button>
                                <button type="button" class="btn btn-warning btn-sm" data-bs-toggle="modal" data-bs-target="#discrepanciaModal" data-id="@orden.idOrdenCompra">Registrar Discrepancia</button>
                            </div>
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
    <div class="d-flex justify-content-between mt-4">
        <a href="@Url.Action("GenerarOrdenes", "Reabastecimiento")" class="btn btn-secondary me-2"><i class="fa fa-arrow-left"></i> Anterior</a>
        <a href="@Url.Action("IndexReabastecimiento", "Reabastecimiento")" class="btn btn-secondary mx-2">Regresar a Reabastecimiento</a>
        <a href="@Url.Action("HistorialReabastecimiento", "Reabastecimiento")" class="btn btn-secondary ms-2">Siguiente <i class="fa fa-arrow-right"></i></a>
    </div>
</div>

<!-- Modal Bootstrap para registrar discrepancia -->
<div class="modal fade" id="discrepanciaModal" tabindex="-1" aria-labelledby="discrepanciaModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <form method="post" action="@Url.Action("RegistrarDiscrepancia", "Reabastecimiento")" onsubmit="mostrarAlertaEnvio();">
                <div class="modal-header">
                    <h5 class="modal-title" id="discrepanciaModalLabel">Registrar Discrepancia</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    <div class="mb-3">
                        <label for="discrepanciaMensaje" class="form-label">Detalle la discrepancia</label>
                        <textarea class="form-control" id="discrepanciaMensaje" name="mensajeDiscrepancia" rows="4" required></textarea>
                        <input type="hidden" id="modalIdProducto" name="idOrdenCompra" value="">
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cerrar</button>
                    <button type="submit" class="btn btn-primary">Registrar Discrepancia</button>
                </div>
            </form>
        </div>
    </div>
</div>

<!-- Script para gestionar el ID del producto en la modal -->
<script>
    var modal = document.getElementById('discrepanciaModal');
    modal.addEventListener('show.bs.modal', function (event) {
        var button = event.relatedTarget;
        var idOrdenCompra = button.getAttribute('data-id');
        document.getElementById('modalIdProducto').value = idOrdenCompra;
    });

    // SweetAlert para confirmar el envío
    function mostrarAlertaEnvio() {
        Swal.fire({
            icon: 'success',
            title: 'Discrepancia Enviada',
            text: 'La discrepancia se registró y el correo fue enviado correctamente.',
            confirmButtonText: 'Aceptar'
        });
    }

   document.querySelectorAll('.confirmar-recepcion-btn').forEach(button => {
    button.addEventListener('click', function () {
        const idOrdenCompra = this.getAttribute('data-id');

        console.log("Botón de Confirmar Recepción clickeado para ID:", idOrdenCompra);

        fetch('@Url.Action("ActualizarEstadoOrden", "Reabastecimiento")', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json',
                'RequestVerificationToken': '@Html.AntiForgeryToken()'
            },
            body: JSON.stringify({ idOrdenCompra: idOrdenCompra })
        })
        .then(response => {
            if (!response.ok) {
                console.error("Error en la respuesta HTTP:", response);
                throw new Error("Error en la confirmación de la recepción.");
            }
            return response.json();
        })
        .then(data => {
            console.log("Respuesta JSON procesada:", data);
            if (data.success) {
                const row = document.getElementById(`row-${idOrdenCompra}`);
                if (row) {
                    row.remove(); // Elimina la fila correspondiente
                }
                Swal.fire("Éxito", data.message, "success");
            } else {
                Swal.fire("Advertencia", data.message, "warning");
            }
        })
        .catch(error => {
            console.error("Error en el proceso:", error);
            Swal.fire("Error", "Ocurrió un error inesperado. Por favor, inténtelo de nuevo.", "error");
        });
    });
});

</script>
