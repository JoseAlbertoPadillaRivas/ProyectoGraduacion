@model List<ProyectoDeGraduacion.BaseDatos.tInventario>

@{
    ViewBag.Title = "Generar Órdenes de Compra";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="container mt-4">
    <h2 class="text-center">Generar Órdenes de Compra</h2>
    <p class="text-center">Seleccione los productos que necesitan ser reabastecidos.</p>

    <div class="table-responsive mt-4">
        <form id="generarOrdenesForm" method="post" action="@Url.Action("GenerarOrdenes", "Reabastecimiento")">
            <table class="table table-bordered">
                <thead class="thead-dark">
                    <tr>
                        <th>Producto</th>
                        <th>Cantidad a Solicitar</th>
                        <th>Proveedor</th>
                        <th>Acciones</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var producto in Model)
                    {
                        <tr>
                            <td>@producto.NombreProducto</td>
                            <td>
                                <input type="number" name="cantidad_@producto.idProducto" class="form-control cantidad" data-producto-id="@producto.idProducto" value="0" min="0">
                            </td>
                            <td>
                                <select name="proveedor_@producto.idProducto" class="form-control proveedor" data-producto-id="@producto.idProducto">
                                    <option value="">Seleccione un proveedor</option>
                                    @foreach (var proveedor in ViewBag.Proveedores)
                                    {
                                        <option value="@proveedor.idProveedor">@proveedor.Empresa</option>
                                    }
                                </select>
                            </td>
                            <td>
                                <button type="submit" class="btn btn-info">Generar Orden</button>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </form>
    </div>

    <div class="d-flex justify-content-between mt-4">
        <a href="@Url.Action("ConfigurarValores", "Reabastecimiento")" class="btn btn-secondary"><i class="fa fa-arrow-left"></i> Anterior</a>
        <a href="@Url.Action("IndexReabastecimiento", "Reabastecimiento")" class="btn btn-secondary">Regresar a Reabastecimiento</a>
        <a href="@Url.Action("ConfirmarRecepcion", "Reabastecimiento")" class="btn btn-secondary">Siguiente <i class="fa fa-arrow-right"></i></a>
    </div>
</div>

<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
<script>
    document.getElementById("generarOrdenesForm").addEventListener("submit", function (event) {
        const cantidades = document.querySelectorAll(".cantidad");
        const proveedores = document.querySelectorAll(".proveedor");
        let hayErrores = false;

        cantidades.forEach((cantidad) => {
            const idProducto = cantidad.getAttribute("data-producto-id");
            const cantidadValue = cantidad.value.trim();
            const proveedor = document.querySelector(`.proveedor[data-producto-id="${idProducto}"]`);
            const proveedorValue = proveedor.value.trim();

            if (!cantidadValue || cantidadValue <= 0) {
                hayErrores = true;
                Swal.fire("Error", "Por favor, ingresa una cantidad válida para cada producto.", "error");
                event.preventDefault();
                return;
            }

            if (!proveedorValue) {
                hayErrores = true;
                Swal.fire("Error", "Por favor, selecciona un proveedor para cada producto.", "error");
                event.preventDefault();
                return;
            }
        });

        if (hayErrores) {
            return false; // Detiene el envío del formulario
        }
    });

    document.addEventListener("DOMContentLoaded", function () {
        @if (TempData["SuccessMessage"] != null)
        {
            <text>
                Swal.fire({
                    title: 'Orden Enviada',
                    text: '@TempData["SuccessMessage"]',
                    icon: 'success',
                    confirmButtonText: 'Aceptar'
                });
            </text>
        }
        else if (TempData["ErrorMessage"] != null)
        {
            <text>
                Swal.fire({
                    title: 'Error en Envío',
                    text: '@TempData["ErrorMessage"]',
                    icon: 'error',
                    confirmButtonText: 'Aceptar'
                });
            </text>
        }
    });
</script>
