@model List<ProyectoDeGraduacion.BaseDatos.tInventario>

@{
    ViewBag.Title = "Generar Órdenes de Compra";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="container mt-4">
    <h2 class="text-center">Generar Órdenes de Compra</h2>
    <p class="text-center">Seleccione los productos que necesitan ser reabastecidos.</p>

    <div class="table-responsive mt-4">
        <form id="generarOrdenesForm" method="post" action="@Url.Action("GenerarOrdenes", "Reabastecimiento")">
            <table class="table table-bordered">
                <thead class="thead-dark">
                    <tr>
                        <th>Producto</th>
                        <th>Cantidad a Solicitar</th>
                        <th>Proveedor</th>
                        <th>Acciones</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var producto in Model)
                    {
                        <tr>
                            <td>@producto.NombreProducto</td>
                            <td>
                                <input type="number" name="cantidad_@producto.idProducto" class="form-control cantidad" data-producto-id="@producto.idProducto" value="0" min="0">
                            </td>
                            <td>
                                <select name="proveedor_@producto.idProducto" class="form-control proveedor" data-producto-id="@producto.idProducto">
                                    <option value="">Seleccione un proveedor</option>
                                    @foreach (var proveedor in ViewBag.Proveedores)
                                    {
                                        <option value="@proveedor.idProveedor">@proveedor.Empresa</option>
                                    }
                                </select>
                            </td>
                            <td>
                                <button type="submit" class="btn btn-info">Generar Orden</button>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </form>
    </div>

    <div class="d-flex justify-content-between mt-4">
        <a href="@Url.Action("ConfigurarValores", "Reabastecimiento")" class="btn btn-secondary"><i class="fa fa-arrow-left"></i> Anterior</a>
        <a href="@Url.Action("IndexReabastecimiento", "Reabastecimiento")" class="btn btn-secondary">Regresar a Reabastecimiento</a>
        <a href="@Url.Action("ConfirmarRecepcion", "Reabastecimiento")" class="btn btn-secondary">Siguiente <i class="fa fa-arrow-right"></i></a>
    </div>
</div>

<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
<script>
    document.addEventListener("DOMContentLoaded", function () {
        // Escuchar el evento de clic en los botones "Generar Orden"
        document.querySelectorAll(".btn-info").forEach((button) => {
            button.addEventListener("click", function (event) {
                event.preventDefault(); // Detener el comportamiento predeterminado del botón

                // Encontrar la fila asociada al botón clicado
                const row = this.closest("tr");

                // Obtener los elementos de cantidad y proveedor dentro de la fila
                const cantidadInput = row.querySelector(".cantidad");
                const proveedorSelect = row.querySelector(".proveedor");

                const cantidadValue = cantidadInput.value.trim();
                const proveedorValue = proveedorSelect.value.trim();

                // Validar la cantidad
                if (!cantidadValue || cantidadValue <= 0) {
                    Swal.fire("Error", "Por favor, ingresa una cantidad válida para este producto.", "error");
                    return;
                }

                // Validar el proveedor
                if (!proveedorValue) {
                    Swal.fire("Error", "Por favor, selecciona un proveedor para este producto.", "error");
                    return;
                }

                // Si las validaciones pasan, enviar el formulario
                Swal.fire({
                    title: 'Confirmación',
                    text: '¿Deseas generar esta orden de compra?',
                    icon: 'question',
                    showCancelButton: true,
                    confirmButtonText: 'Sí, generar',
                    cancelButtonText: 'Cancelar'
                }).then((result) => {
                    if (result.isConfirmed) {
                        // Crear un formulario dinámico para enviar solo esta fila
                        const form = document.createElement("form");
                        form.method = "post";
                        form.action = "@Url.Action("GenerarOrdenes", "Reabastecimiento")";

                        // Agregar campos al formulario
                        const cantidadField = document.createElement("input");
                        cantidadField.type = "hidden";
                        cantidadField.name = cantidadInput.name;
                        cantidadField.value = cantidadValue;
                        form.appendChild(cantidadField);

                        const proveedorField = document.createElement("input");
                        proveedorField.type = "hidden";
                        proveedorField.name = proveedorSelect.name;
                        proveedorField.value = proveedorValue;
                        form.appendChild(proveedorField);

                        // Agregar el formulario al cuerpo y enviarlo
                        document.body.appendChild(form);
                        form.submit();
                    }
                });
            });
        });

        // Mensajes globales para éxito o error desde TempData
        @if (TempData["SuccessMessage"] != null)
        {
            <text>
                Swal.fire({
                    title: 'Orden Enviada',
                    text: '@TempData["SuccessMessage"]',
                    icon: 'success',
                    confirmButtonText: 'Aceptar'
                });
            </text>
        }
        else if (TempData["ErrorMessage"] != null)
        {
            <text>
                Swal.fire({
                    title: 'Error en Envío',
                    text: '@TempData["ErrorMessage"]',
                    icon: 'error',
                    confirmButtonText: 'Aceptar'
                });
            </text>
        }
    });
</script>

