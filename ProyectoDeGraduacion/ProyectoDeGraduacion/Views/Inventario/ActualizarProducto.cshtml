@model ProyectoDeGraduacion.BaseDatos.tInventario

@{
    Layout = "~/Views/Shared/_LayoutExterno.cshtml";
    ViewBag.Title = "Registro";
}

<div class="card">
    <div class="card-body register-card-body">
        <p class="login-box-msg">Actualizar Producto</p>

        @if (ViewBag.msj != null)
        {
            <div class="alert alert-info" role="alert" style="text-align:center">
                @ViewBag.msj
            </div>
        }

        @using (Html.BeginForm("ActualizarProducto", "Inventario", FormMethod.Post, new { @id = "actualizarProductoForm" }))
        {
            @Html.HiddenFor(m => m.idProducto)
            <div class="input-group mb-3">
                @Html.TextBoxFor(m => m.NombreProducto, new
                {
                    @type = "text",
                    @class = "form-control",
                    @placeholder = "Nombre",
                    @id = "NombreProducto"
                })
                <div class="input-group-append">
                    <div class="input-group-text">
                        <span class="fas fa-user"></span>
                    </div>
                </div>
            </div>
            <div class="input-group mb-3">
                @Html.TextBoxFor(m => m.Cantidad, new
                {
                    @type = "text",
                    @class = "form-control",
                    @placeholder = "Cantidad",
                    @id = "Cantidad"
                })
                <div class="input-group-append">
                    <div class="input-group-text">
                        <span class="fas fa-user"></span>
                    </div>
                </div>
            </div>
            <div class="input-group mb-3">
                @Html.TextBoxFor(m => m.CaducidadProducto, new
                {
                    @type = "date",
                    @class = "form-control",
                    @placeholder = "Caducidad",
                    @id = "CaducidadProducto"
                })
                <div class="input-group-append">
                    <div class="input-group-text">
                        <span class="fas fa-envelope"></span>
                    </div>
                </div>
            </div>
            <div class="input-group mb-3">
                @Html.DropDownListFor(m => m.idProveedor, (SelectList)ViewBag.Proveedores, "Seleccione un proveedor", new
                {
                    @class = "form-control",
                    @id = "idProveedor"
                })
                <div class="input-group-append">
                    <div class="input-group-text">
                        <span class="fas fa-user"></span>
                    </div>
                </div>
            </div>
            <div class="row">
                <div class="col-6">
                </div>
                <div class="col-6">
                    <div class="text-center mt-4">
                        <button type="submit" class="btn btn-success btn-block">Actualizar</button>
                    </div>
                </div>
            </div>
        }
    </div>
</div>

<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
<script>
    document.getElementById("actualizarProductoForm").addEventListener("submit", function (event) {
        const nombreProducto = document.getElementById("NombreProducto").value.trim();
        const cantidad = document.getElementById("Cantidad").value.trim();
        const caducidadProducto = document.getElementById("CaducidadProducto").value.trim();
        const idProveedor = document.getElementById("idProveedor").value.trim();

        if (!nombreProducto) {
            event.preventDefault();
            Swal.fire("Error", "Por favor, ingresa el nombre del producto.", "error");
            return;
        }
        if (!cantidad || isNaN(cantidad) || cantidad <= 0) {
            event.preventDefault();
            Swal.fire("Error", "Por favor, ingresa una cantidad válida.", "error");
            return;
        }
        if (!caducidadProducto) {
            event.preventDefault();
            Swal.fire("Error", "Por favor, selecciona una fecha de caducidad.", "error");
            return;
        }
        if (!idProveedor || idProveedor === "Seleccione un proveedor") {
            event.preventDefault();
            Swal.fire("Error", "Por favor, selecciona un proveedor.", "error");
            return;
        }
    });
</script>
